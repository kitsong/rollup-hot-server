{"code":"// edit from rollup/cli/run/getConfigPath\r\nimport { __awaiter } from \"tslib\";\r\nimport { promises as fs } from 'fs';\r\nimport { resolve } from 'path';\r\nimport { cwd } from 'process';\r\nexport function getRollupConfigPath(commandConfig) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const DEFAULT_CONFIG_BASE = 'rollup.config';\r\n        if (commandConfig === '') {\r\n            return resolve(yield findConfigFileNameInCwd(DEFAULT_CONFIG_BASE));\r\n        }\r\n        if (commandConfig.slice(0, 5) === 'node:') {\r\n            const pkgName = commandConfig.slice(5);\r\n            try {\r\n                return require.resolve(`rollup-config-${pkgName}`, { paths: [cwd()] });\r\n            }\r\n            catch (_a) {\r\n                try {\r\n                    return require.resolve(pkgName, { paths: [cwd()] });\r\n                }\r\n                catch (err) {\r\n                    if (err.code === 'MODULE_NOT_FOUND') {\r\n                        throw new Error(`Could not resolve config file \"${commandConfig}\"`);\r\n                    }\r\n                    throw err;\r\n                }\r\n            }\r\n        }\r\n        return resolve(commandConfig);\r\n    });\r\n}\r\nexport function getServerConfigPath(commandConfig) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const DEFAULT_CONFIG_BASE = 'server.config';\r\n        if (commandConfig === '') {\r\n            return resolve(yield findConfigFileNameInCwd(DEFAULT_CONFIG_BASE));\r\n        }\r\n        return resolve(commandConfig);\r\n    });\r\n}\r\nfunction findConfigFileNameInCwd(configBase) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const filesInWorkingDir = new Set(yield fs.readdir(cwd()));\r\n        for (const extension of ['mjs', 'cjs', 'ts']) {\r\n            const fileName = `${configBase}.${extension}`;\r\n            if (filesInWorkingDir.has(fileName))\r\n                return fileName;\r\n        }\r\n        return `${configBase}.js`;\r\n    });\r\n}\r\n","references":[]}
